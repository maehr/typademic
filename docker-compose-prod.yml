version: '3'

services:
    reverse-proxy:
        # The official v2 Traefik docker image
        image: traefik:v2.5
        environment:
            - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
            - CF_API_KEY=${CLOUDFLARE_API_KEY}
        command:
            # Enables the web UI and tells Traefik to listen to docker
            - --api.insecure=true
            - --providers.docker=true
            - --log=true
            - --log.level=INFO # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
            - --accessLog=true
            - --accessLog.filePath=/traefik.log
            - --certificatesResolvers.dns-cloudflare.acme.email=$CLOUDFLARE_EMAIL
            - --certificatesResolvers.dns-cloudflare.acme.storage=acme.json
            - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge=true
            - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
            # LetsEncrypt Staging Server - uncomment when testing
            # - --certificatesResolvers.dns-cloudflare.acme.caServer=https://acme-staging-v02.api.letsencrypt.org/directory
            - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,8.8.8.8:53
            - --entryPoints.web.address=:80
            - --entryPoints.websecure.address=:443
        ports:
            - 80:80
            - 443:443
            - 8080:8080
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./traefik/acme.json:/acme.json
            - ./traefik/traefik.log:/traefik.log
        labels:
            - traefik.http.routers.traefik-rtr.tls=true
            - traefik.http.routers.traefik-rtr.tls.certresolver=dns-cloudflare # Comment out this line after first run of traefik to force the use of wildcard certs
            - traefik.http.routers.traefik-rtr.tls.domains[0].main=typademic.ch
            - traefik.http.routers.traefik-rtr.tls.domains[0].sans=*.typademic.ch

    typademic:
        build:
            context: .
        restart: unless-stopped
        labels:
            - traefik.http.routers.web.rule=Host(`typademic.ch`)
            - traefik.http.routers.web.tls=true
            - traefik.http.routers.web.tls.certresolver=dns-cloudflare
